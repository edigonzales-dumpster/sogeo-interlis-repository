name: CI/CD

on: [push]

jobs:
  build:
    env:
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
      DIGITALOCEAN_TOKEN: ${{secrets.DIGITALOCEAN_TOKEN}}
      # AWS_REGION: eu-west-1
      BUILD_NUMBER: ${{ github.run_number }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Gradle
        run: ./gradlew deleteIlicache createIliModelsXml validateIliModelsXml versionTxt buildDockerImage startDockerContainer deleteIlicache checkInterlisRepository stopDockerContainer 
      - name: List Docker Images
        run: |
          docker images 
      - name: Push Docker Image to Docker Hub
        run: ./gradlew pushDockerImages -i
        if: ${{ github.ref == 'refs/heads/main' }} 
      - name: Deploy to Digital Ocean App Platform
        run: |
          curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" "https://api.digitalocean.com/v2/apps/a956ba1e-934d-4db9-a489-91e16ec59701/deployments"
        if: ${{ github.ref == 'refs/heads/main' }} 

      # TODO: Sollte ebenfalle mit Gradle gemacht werden.
      # - zweites build File?
      # - oder zumindest das Tagging
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ env.AWS_REGION }}
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      # - name: Push Docker Image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: 465066823493.dkr.ecr.eu-west-1.amazonaws.com
      #     ECR_REPOSITORY: sogeo-interlis-repository
      #   run: |
      #     docker image tag edigonzales/sogeo-interlis-repository:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
      #     docker image tag edigonzales/sogeo-interlis-repository:1.0.$BUILD_NUMBER $ECR_REGISTRY/$ECR_REPOSITORY:1.0.$BUILD_NUMBER
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:1.0.$BUILD_NUMBER
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:1.0.$BUILD_NUMBER"
      #   if: ${{ github.ref == 'refs/heads/main' }}  
